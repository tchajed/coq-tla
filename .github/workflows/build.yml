name: CI

# Controls when the action will run:
# https://help.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#filtering-for-specific-branches-tags-and-paths
on:
  push:
    branches:
      - '*'
  pull_request:
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        coq_version:
          - "8.16"
          #- "8.15"
      max-parallel: 4
      # don't cancel all in-progress jobs if one matrix job fails:
      fail-fast: false

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: coq-community/docker-coq-action@v1
        with:
          coq_version: ${{ matrix.coq_version }}
          ocaml_version: "4.14-flambda"
          before_script: |
            sudo chown -R coq:coq . # workaround a permission issue
          install: |
            startGroup Install dependencies
              sudo apt-get update
              sudo apt-get install -y python3 python3-pip
              opam install coq-serapi
              python3 -m pip install git+https://github.com/cpitclaudel/alectryon.git
            endGroup
          script: |
            startGroup Build
              make -j2 -k
            endGroup
            startGroup Build docs
              make -j2 -k doc
            endGroup
          # skip uninstall since we need docs/ for upload
          uninstall: ""
      - name: Revert permissions
        # to avoid a warning at cleanup time
        if: ${{ always() }}
        run: sudo chown -R 1001:116 .
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        if: github.ref == 'refs/heads/main'
        with:
          path: ./docs

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    concurrency:
      group: "pages"
      cancel-in-progress: true
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
